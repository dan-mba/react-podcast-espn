{"version":3,"sources":["Podcasts.js","App.js","index.js"],"names":["Podcasts","podcasts","this","props","items","length","slice","map","item","index","key","className","selected","onClick","e","clickFunc","enclosure","$","url","title","description","_","Component","App","state","rss","isLoaded","playing","handleClick","bind","setState","axios","get","params","then","response","data","spacer","src","channel","image","alt","controls","height","width","class","ReactDOM","render","document","getElementById"],"mappings":"mTAiCeA,G,uLA7BH,IAAD,OAWDC,GAPHC,KAAKC,MAAMC,MAAMC,OAAS,GACrBH,KAAKC,MAAMC,MAAME,MAAM,EAAE,IAEzBJ,KAAKC,MAAMC,OAIEG,KAAI,SAACC,EAAMC,GAAP,OACvB,yBAAKC,IAAKD,EACRE,UAAW,EAAKR,MAAMS,WAAaH,EAAQ,mBAAqB,UAChEI,QAAS,SAACC,GAAD,OAAO,EAAKX,MAAMY,UAAUP,EAAKQ,UAAUC,EAAEC,IAAKT,EAAMK,KACjE,6BAAMN,EAAKW,OACX,yBAAKR,UAAU,WACgB,kBAArBH,EAAKY,YAA2BZ,EAAKY,YAAYC,EAAIb,EAAKY,YAAY,6BADhF,KAEKZ,EAAK,mBAFV,UAOJ,OACE,6BAAMP,O,GAzBWqB,c,iBC2ERC,E,YAtEb,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KACDqB,MAAQ,CACXC,IAAK,GACLC,UAAU,EACVR,IAAK,GACLN,UAAW,EACXe,SAAS,GAEX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBATF,E,yEAYPX,EAAKN,EAAUE,GACzBZ,KAAK4B,SACH,CACEZ,IAAKA,EACLS,SAAS,EACTf,SAAUA,M,0CAKK,IAAD,OAClBmB,IAAMC,IAAI,kCAAmC,CAC3CC,OAAQ,CACNR,IAAK,oEAGRS,MAAK,SAACC,GACL,EAAKL,SAAS,CACZL,IAAKU,EAASC,KAAKX,IACnBC,UAAU,S,+BAMd,IAAMW,EAAS,yBAAK1B,UAAU,gBAE9B,OAAKT,KAAKsB,MAAME,SASZ,yBAAKf,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAK2B,IAAKpC,KAAKsB,MAAMC,IAAIc,QAAQC,MAAMtB,IAAKuB,IAAI,KAChD,yBAAK9B,UAAU,cACb,yBAAKA,UAAU,SAAST,KAAKsB,MAAMC,IAAIc,QAAQpB,OAC/C,6BAAMjB,KAAKsB,MAAMC,IAAIc,QAAQnB,eAI/BlB,KAAKsB,MAAMG,QAAmB,GAATU,EACvB,kBAAC,IAAD,CAAY1B,UAAU,cAAcO,IAAKhB,KAAKsB,MAAMN,IAAKwB,UAAQ,EAC/Df,QAASzB,KAAKsB,MAAMG,QAASgB,OAAO,OAAOC,MAAM,SAEnD,kBAAC,EAAD,CAAUxC,MAAOF,KAAKsB,MAAMC,IAAIc,QAAQ/B,KACtCO,UAAWb,KAAK0B,YAChBhB,SAAUV,KAAKsB,MAAMZ,YAtBzB,yBAAKD,UAAU,OACb,wCACA,yBAAKkC,MAAM,gBAAe,8BAAW,8BAAW,oC,GA5CxCvB,aCDlBwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.35560ddb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Podcasts.css';\r\n\r\nclass Podcasts extends Component {\r\n  render() {\r\n    var arr;\r\n\r\n    /* Only display the 10 most recent podcasts */\r\n    if(this.props.items.length > 10) {\r\n      arr = this.props.items.slice(0,10);\r\n    } else {\r\n      arr = this.props.items;\r\n    }\r\n\r\n    /* Map array of podcasts to JSX */\r\n    const podcasts = arr.map((item, index) => \r\n      <div key={index}\r\n        className={this.props.selected === index ? \"Selected Podcast\" : \"Podcast\"}\r\n        onClick={(e) => this.props.clickFunc(item.enclosure.$.url, index,e)}>\r\n        <div>{item.title}</div>\r\n        <div className=\"PodDesc\">\r\n          {typeof item.description === 'object' ? item.description._ : item.description}<br/>\r\n          ( {item[\"itunes:duration\"]} )\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>{podcasts}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Podcasts;","import React, { Component } from 'react';\n\nimport './App.css';\nimport axios from 'axios';\nimport Podcasts from './Podcasts.js';\nimport FilePlayer from 'react-player/lib/players/FilePlayer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rss: [],\n      isLoaded: false,\n      url: \"\",\n      selected: -1,\n      playing: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(url, selected, e) {\n    this.setState(\n      {\n        url: url,\n        playing: true,\n        selected: selected\n      });\n  }\n\n  /* Retrieve the JSON version of the RSS feed from the back-end & overcome CORS  */\n  componentDidMount() {\n    axios.get(\"https://flannel-glade.glitch.me\", {\n      params: {\n        rss: \"http://www.espn.com/espnradio/feeds/rss/podcast.xml?id=2942325\"\n      }\n    })\n    .then((response) => {\n      this.setState({\n        rss: response.data.rss,\n        isLoaded: true\n      });\n    })\n  }\n\n  render() {\n    const spacer = <div className=\"mediaPlayer\"></div>\n\n    if (!this.state.isLoaded) {\n      return (\n        <div className=\"App\">\n          <div>Loading</div>\n          <div class=\"lds-facebook\"><div></div><div></div><div></div></div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"Header\">\n            <img src={this.state.rss.channel.image.url} alt=\"\"></img>\n            <div className=\"HeaderText\">\n              <div className=\"Title\">{this.state.rss.channel.title}</div>\n              <div>{this.state.rss.channel.description}</div>\n            </div>\n          </div>\n\n          {!this.state.playing ? spacer : \"\" /* Reserve space for FilePlayer until url is loaded */}\n          <FilePlayer className=\"mediaPlayer\" url={this.state.url} controls \n            playing={this.state.playing} height=\"40px\" width=\"100%\"/>\n\n          <Podcasts items={this.state.rss.channel.item} \n            clickFunc={this.handleClick}\n            selected={this.state.selected}/>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}