{"version":3,"sources":["Podcasts.js","App.js","index.js"],"names":["Podcasts","Component","render","podcasts","this","props","items","length","slice","map","item","index","className","selected","onClick","e","clickFunc","enclosure","$","url","title","description","_","time","Math","floor","App","constructor","super","state","rss","isLoaded","playing","handleClick","bind","console","log","setState","componentDidMount","axios","get","params","then","response","data","src","channel","image","alt","height","width","config","forceAudio","attributes","controls","tracks","ReactDOM","document","getElementById"],"mappings":"+QAUA,MAAMA,UAAiBC,YACrBC,SAWE,MAAMC,GAPHC,KAAKC,MAAMC,MAAMC,OAAS,GACrBH,KAAKC,MAAMC,MAAME,MAAM,EAAE,IAEzBJ,KAAKC,MAAMC,OAIEG,KAAI,CAACC,EAAMC,KAC9B,6BACEC,UAAWR,KAAKC,MAAMQ,WAAaF,EAAQ,mBAAqB,UAChEG,QAAUC,GAAMX,KAAKC,MAAMW,UAAUN,EAAKO,UAAUC,EAAEC,IAAKR,EAAMI,GAFnE,UAGE,8BAAML,EAAKU,QACX,sBAAKR,UAAU,UAAf,UAC+B,kBAArBF,EAAKW,YAA2BX,EAAKW,YAAYC,EAAIZ,EAAKW,YAAY,uBADhF,MAxBiBE,EA0BIb,EAAK,mBAzBtBc,KAAKC,MAAMF,EAAO,IAGf,IAFHA,EAAO,IAsBX,UAJQZ,GApBhB,IAAyBY,KA+BrB,OACE,8BAAMpB,KAKGH,Q,iBCjCf,MAAM0B,UAAYzB,YAChB0B,YAAYtB,GACVuB,MAAMvB,GACND,KAAKyB,MAAQ,CACXC,IAAK,GACLC,UAAU,EACVZ,IAAK,GACLN,UAAW,EACXmB,SAAS,GAEX5B,KAAK6B,YAAc7B,KAAK6B,YAAYC,KAAK9B,MAG3C6B,YAAYd,EAAKN,EAAUE,GACzBoB,QAAQC,IAAIjB,GACZf,KAAKiC,SACH,CACElB,IAAKA,EACLa,SAAS,EACTnB,SAAUA,IAKhByB,oBACEC,IAAMC,IAAI,kCAAmC,CAC3CC,OAAQ,CACNX,IAAK,oEAGRY,MAAMC,IACLvC,KAAKiC,SAAS,CACZP,IAAKa,EAASC,KAAKd,IACnBC,UAAU,OAKhB7B,SACE,OAAKE,KAAKyB,MAAME,SASZ,sBAAKnB,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKiC,IAAKzC,KAAKyB,MAAMC,IAAIgB,QAAQC,MAAM5B,IAAK6B,IAAI,KAChD,sBAAKpC,UAAU,aAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBR,KAAKyB,MAAMC,IAAIgB,QAAQ1B,QAC/C,8BAAMhB,KAAKyB,MAAMC,IAAIgB,QAAQzB,oBAIjC,cAAC,IAAD,CAAaT,UAAU,cAAcO,IAAKf,KAAKyB,MAAMV,IACnDa,QAAS5B,KAAKyB,MAAMG,QAASiB,OAAO,OAAOC,MAAM,OACjDC,OAAQ,CACNC,YAAY,EACZC,WAAY,CACVJ,OAAQ,OACRC,MAAO,OACPI,UAAU,GAEZC,OAAQ,MAGZ,cAAC,EAAD,CAAUjD,MAAOF,KAAKyB,MAAMC,IAAIgB,QAAQpC,KACtCM,UAAWZ,KAAK6B,YAChBpB,SAAUT,KAAKyB,MAAMhB,cA9BzB,sBAAKD,UAAU,MAAf,UACE,0CACA,sBAAKA,UAAU,eAAf,UAA8B,wBAAW,wBAAW,+BAmC/Cc,QC/Ef8B,IAAStD,OAAO,cAAC,EAAD,IAASuD,SAASC,eAAe,W","file":"static/js/main.0f602ff9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Podcasts.css';\n\nfunction convertDuration(time) {\n  var min = Math.floor(time / 60);\n  var sec = time % 60;\n\n  return min + \":\" + sec;\n}\n\nclass Podcasts extends Component {\n  render() {\n    var arr;\n\n    /* Only display the 10 most recent podcasts */\n    if(this.props.items.length > 10) {\n      arr = this.props.items.slice(0,10);\n    } else {\n      arr = this.props.items;\n    }\n\n    /* Map array of podcasts to JSX */\n    const podcasts = arr.map((item, index) => \n      <div key={index}\n        className={this.props.selected === index ? \"Selected Podcast\" : \"Podcast\"}\n        onClick={(e) => this.props.clickFunc(item.enclosure.$.url, index,e)}>\n        <div>{item.title}</div>\n        <div className=\"PodDesc\">\n          {typeof item.description === 'object' ? item.description._ : item.description}<br/>\n          ( {convertDuration(item[\"itunes:duration\"])} )\n        </div>\n      </div>\n    );\n\n    return (\n      <div>{podcasts}</div>\n    );\n  }\n}\n\nexport default Podcasts;","import React, { Component } from 'react';\n\nimport './App.css';\nimport axios from 'axios';\nimport Podcasts from './Podcasts.js';\nimport ReactPlayer from 'react-player/file';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rss: [],\n      isLoaded: false,\n      url: \"\",\n      selected: -1,\n      playing: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(url, selected, e) {\n    console.log(url);\n    this.setState(\n      {\n        url: url,\n        playing: true,\n        selected: selected\n      });\n  }\n\n  /* Retrieve the JSON version of the RSS feed from the back-end & overcome CORS  */\n  componentDidMount() {\n    axios.get(\"https://flannel-glade.glitch.me\", {\n      params: {\n        rss: \"http://www.espn.com/espnradio/feeds/rss/podcast.xml?id=2942325\"\n      }\n    })\n    .then((response) => {\n      this.setState({\n        rss: response.data.rss,\n        isLoaded: true\n      });\n    })\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <div className=\"App\">\n          <div>Loading</div>\n          <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"Header\">\n            <img src={this.state.rss.channel.image.url} alt=\"\"></img>\n            <div className=\"HeaderText\">\n              <div className=\"Title\">{this.state.rss.channel.title}</div>\n              <div>{this.state.rss.channel.description}</div>\n            </div>\n          </div>\n\n          <ReactPlayer className=\"mediaPlayer\" url={this.state.url} \n            playing={this.state.playing} height=\"40px\" width=\"100%\"\n            config={{\n              forceAudio: true,\n              attributes: {\n                height: \"40px\",\n                width: \"100%\",\n                controls: true\n              },\n              tracks: []\n            }}/> \n\n          <Podcasts items={this.state.rss.channel.item} \n            clickFunc={this.handleClick}\n            selected={this.state.selected}/>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}